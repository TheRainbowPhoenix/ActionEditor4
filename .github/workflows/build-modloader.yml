name: Build (x86, vcpkg, Ninja)

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-windows-x86:
    runs-on: windows-latest

    env:
      VCPKG_ROOT: ${{ runner.temp }}\vcpkg
      BUILD_TYPE: Release
      TRIPLET: x86-windows
      SRC_DIR: modloader
      BUILD_DIR: modloader/build

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # MSVC environment (x86) so Ninja uses the 32-bit toolchain
      - name: MSVC Dev Cmd (x86)
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x86

      - name: Setup Ninja
        uses: ashutoshvarma/setup-ninja@v1

      - name: Install CMake (optional; windows-latest already has it)
        uses: jwlawson/actions-setup-cmake@v2

      - name: Install vcpkg
        shell: pwsh
        run: |
          git clone --depth 1 https://github.com/microsoft/vcpkg "$env:VCPKG_ROOT"
          & "$env:VCPKG_ROOT\bootstrap-vcpkg.bat" -disableMetrics

      - name: Integrate and install dependencies
        shell: pwsh
        run: |
          & "$env:VCPKG_ROOT\vcpkg.exe" integrate install
          & "$env:VCPKG_ROOT\vcpkg.exe" install minhook:${{ env.TRIPLET }}

      - name: Configure (CMake + vcpkg toolchain)
        shell: pwsh
        run: >
          cmake -S "${{ env.SRC_DIR }}" -B "${{ env.BUILD_DIR }}" -G "Ninja"
          -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
          -DCMAKE_TOOLCHAIN_FILE="${{ env:VCPKG_ROOT }}\scripts\buildsystems\vcpkg.cmake"
          -DVCPKG_TARGET_TRIPLET=${{ env.TRIPLET }}
          -DVCPKG_APPLOCAL_DEPS=OFF

      - name: Build
        shell: pwsh
        run: cmake --build "${{ env.BUILD_DIR }}" --config $env:BUILD_TYPE

      - name: Upload artifact (DLL + PDB)
        uses: actions/upload-artifact@v4
        with:
          name: modloader-${{ env.TRIPLET }}-${{ env.BUILD_TYPE }}
          path: |
            ${{ env.BUILD_DIR }}\*.dll
            ${{ env.BUILD_DIR }}\*.pdb
            ${{ env.BUILD_DIR }}\*.lib
