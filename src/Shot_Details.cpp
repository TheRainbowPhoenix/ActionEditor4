#include <stdio.h>
#include "Shot_Details.h"

void Read_Shot_Details(struct Shot_Details* details, FILE* read_file) {
	fread(&details->execution_time, sizeof(short int), 1, read_file);
	fread(&details->execution_time_double, sizeof(short int), 1, read_file);
	fread(&details->parallel_execution, sizeof(char), 1, read_file);
	fread(&details->sound_effect, sizeof(short int), 1, read_file);
	fread(&details->play_if_outside_screen, sizeof(char), 1, read_file);
	fread(&details->animation, sizeof(short int), 1, read_file);
	fread(&details->bytes11_30, sizeof(char), 20, read_file);
	fread(&details->number_of_shots_fired, sizeof(char), 1, read_file);
	fread(&details->formation, sizeof(char), 1, read_file);
	fread(&details->firing_parameter1, sizeof(short int), 1, read_file);
	fread(&details->firing_parameter2, sizeof(short int), 1, read_file);
	fread(&details->firing_parameter3, sizeof(short int), 1, read_file);
	fread(&details->target, sizeof(char), 1, read_file);
	fread(&details->direction, sizeof(char), 1, read_file);
	fread(&details->set_angle_to_target, sizeof(char), 1, read_file);
	fread(&details->firing_target, sizeof(char), 1, read_file);
	fread(&details->angle_offset, sizeof(short int), 1, read_file);
	fread(&details->angle_offset_double, sizeof(short int), 1, read_file);
	fread(&details->angle_offset_reverse_rotation_if_facing_right, sizeof(char), 1, read_file);
	fread(&details->angle_dispersion, sizeof(short int), 1, read_file);
	fread(&details->change_firing_position_according_to_angle, sizeof(char), 1, read_file);
	fread(&details->number_of_doubles, sizeof(char), 1, read_file);
	fread(&details->firing_position_offset_x, sizeof(short int), 1, read_file);
	fread(&details->firing_position_offset_x_double, sizeof(short int), 1, read_file);
	fread(&details->firing_position_offset_y, sizeof(short int), 1, read_file);
	fread(&details->firing_position_offset_y_double, sizeof(short int), 1, read_file);
	fread(&details->firing_position_offset_x_flip_if_facing_right, sizeof(char), 1, read_file);
	fread(&details->firing_position_offset_y_flip_if_facing_right, sizeof(char), 1, read_file);
	fread(&details->graphic, sizeof(short int), 1, read_file);
	fread(&details->z_coordinate, sizeof(char), 1, read_file);
	fread(&details->transparency, sizeof(char), 1, read_file);
	fread(&details->faction_same_as_user, sizeof(char), 1, read_file);
	fread(&details->faction, sizeof(short int), 1, read_file);
	fread(&details->gigantic, sizeof(short int), 1, read_file);
	fread(&details->movement_type, sizeof(char), 1, read_file);
	fread(&details->movement_type_parameter1, sizeof(short int), 1, read_file);
	fread(&details->movement_type_parameter2, sizeof(short int), 1, read_file);
	fread(&details->movement_type_parameter3, sizeof(short int), 1, read_file);
	fread(&details->movement_target, sizeof(char), 1, read_file);
	fread(&details->synchronize_with_auto_scroll, sizeof(char), 1, read_file);
	fread(&details->speed, sizeof(short int), 1, read_file);
	fread(&details->speed_double, sizeof(short int), 1, read_file);
	fread(&details->acceleration_enabled, sizeof(char), 1, read_file);
	fread(&details->acceleration, sizeof(short int), 1, read_file);
	fread(&details->acceleration_double, sizeof(short int), 1, read_file);
	fread(&details->flight_distance, sizeof(short int), 1, read_file);
	fread(&details->flight_distance_valid, sizeof(char), 1, read_file);
	fread(&details->flight_distance_double, sizeof(short int), 1, read_file);
	fread(&details->flight_distance_does_not_disappear_at_end, sizeof(char), 1, read_file);
	fread(&details->disappearance_time_valid, sizeof(char), 1, read_file);
	fread(&details->disappearance_time, sizeof(short int), 1, read_file);
	fread(&details->disappearance_time_double, sizeof(short int), 1, read_file);
	fread(&details->penetrate_blocks, sizeof(char), 1, read_file);
	fread(&details->penetrate_characters, sizeof(char), 1, read_file);
	fread(&details->penetrate_block_characters, sizeof(char), 1, read_file);
	fread(&details->disappear_on_hitting_shot, sizeof(char), 1, read_file);
	fread(&details->value_for_disappearing_on_hitting_shot, sizeof(char), 1, read_file);
	fread(&details->power, sizeof(int), 1, read_file);
	fread(&details->bytes109_110, sizeof(char), 2, read_file);
	fread(&details->impact, sizeof(char), 1, read_file);
	fread(&details->effect, sizeof(short int), 1, read_file);
	fread(&details->acquired_item_palette_type, sizeof(char), 1, read_file);
	fread(&details->acquired_item_palette_number, sizeof(short int), 1, read_file);
	fread(&details->bytes117_125, sizeof(char), 9, read_file);
	fread(&details->attack, sizeof(char), 1, read_file);
	fread(&details->attack_id, sizeof(char), 1, read_file);
	fread(&details->bytes128_143, sizeof(char), 16, read_file);
}

void Write_Shot_Details(struct Shot_Details* details, FILE* write_file) {
	fwrite(&details->execution_time, sizeof(short int), 1, write_file);
	fwrite(&details->execution_time_double, sizeof(short int), 1, write_file);
	fwrite(&details->parallel_execution, sizeof(char), 1, write_file);
	fwrite(&details->sound_effect, sizeof(short int), 1, write_file);
	fwrite(&details->play_if_outside_screen, sizeof(char), 1, write_file);
	fwrite(&details->animation, sizeof(short int), 1, write_file);
	fwrite(&details->bytes11_30, sizeof(char), 20, write_file);
	fwrite(&details->number_of_shots_fired, sizeof(char), 1, write_file);
	fwrite(&details->formation, sizeof(char), 1, write_file);
	fwrite(&details->firing_parameter1, sizeof(short int), 1, write_file);
	fwrite(&details->firing_parameter2, sizeof(short int), 1, write_file);
	fwrite(&details->firing_parameter3, sizeof(short int), 1, write_file);
	fwrite(&details->target, sizeof(char), 1, write_file);
	fwrite(&details->direction, sizeof(char), 1, write_file);
	fwrite(&details->set_angle_to_target, sizeof(char), 1, write_file);
	fwrite(&details->firing_target, sizeof(char), 1, write_file);
	fwrite(&details->angle_offset, sizeof(short int), 1, write_file);
	fwrite(&details->angle_offset_double, sizeof(short int), 1, write_file);
	fwrite(&details->angle_offset_reverse_rotation_if_facing_right, sizeof(char), 1, write_file);
	fwrite(&details->angle_dispersion, sizeof(short int), 1, write_file);
	fwrite(&details->change_firing_position_according_to_angle, sizeof(char), 1, write_file);
	fwrite(&details->number_of_doubles, sizeof(char), 1, write_file);
	fwrite(&details->firing_position_offset_x, sizeof(short int), 1, write_file);
	fwrite(&details->firing_position_offset_x_double, sizeof(short int), 1, write_file);
	fwrite(&details->firing_position_offset_y, sizeof(short int), 1, write_file);
	fwrite(&details->firing_position_offset_y_double, sizeof(short int), 1, write_file);
	fwrite(&details->firing_position_offset_x_flip_if_facing_right, sizeof(char), 1, write_file);
	fwrite(&details->firing_position_offset_y_flip_if_facing_right, sizeof(char), 1, write_file);
	fwrite(&details->graphic, sizeof(short int), 1, write_file);
	fwrite(&details->z_coordinate, sizeof(char), 1, write_file);
	fwrite(&details->transparency, sizeof(char), 1, write_file);
	fwrite(&details->faction_same_as_user, sizeof(char), 1, write_file);
	fwrite(&details->faction, sizeof(short int), 1, write_file);
	fwrite(&details->gigantic, sizeof(short int), 1, write_file);
	fwrite(&details->movement_type, sizeof(char), 1, write_file);
	fwrite(&details->movement_type_parameter1, sizeof(short int), 1, write_file);
	fwrite(&details->movement_type_parameter2, sizeof(short int), 1, write_file);
	fwrite(&details->movement_type_parameter3, sizeof(short int), 1, write_file);
	fwrite(&details->movement_target, sizeof(char), 1, write_file);
	fwrite(&details->synchronize_with_auto_scroll, sizeof(char), 1, write_file);
	fwrite(&details->speed, sizeof(short int), 1, write_file);
	fwrite(&details->speed_double, sizeof(short int), 1, write_file);
	fwrite(&details->acceleration_enabled, sizeof(char), 1, write_file);
	fwrite(&details->acceleration, sizeof(short int), 1, write_file);
	fwrite(&details->acceleration_double, sizeof(short int), 1, write_file);
	fwrite(&details->flight_distance, sizeof(short int), 1, write_file);
	fwrite(&details->flight_distance_valid, sizeof(char), 1, write_file);
	fwrite(&details->flight_distance_double, sizeof(short int), 1, write_file);
	fwrite(&details->flight_distance_does_not_disappear_at_end, sizeof(char), 1, write_file);
	fwrite(&details->disappearance_time_valid, sizeof(char), 1, write_file);
	fwrite(&details->disappearance_time, sizeof(short int), 1, write_file);
	fwrite(&details->disappearance_time_double, sizeof(short int), 1, write_file);
	fwrite(&details->penetrate_blocks, sizeof(char), 1, write_file);
	fwrite(&details->penetrate_characters, sizeof(char), 1, write_file);
	fwrite(&details->penetrate_block_characters, sizeof(char), 1, write_file);
	fwrite(&details->disappear_on_hitting_shot, sizeof(char), 1, write_file);
	fwrite(&details->value_for_disappearing_on_hitting_shot, sizeof(char), 1, write_file);
	fwrite(&details->power, sizeof(int), 1, write_file);
	fwrite(&details->bytes109_110, sizeof(char), 2, write_file);
	fwrite(&details->impact, sizeof(char), 1, write_file);
	fwrite(&details->effect, sizeof(short int), 1, write_file);
	fwrite(&details->acquired_item_palette_type, sizeof(char), 1, write_file);
	fwrite(&details->acquired_item_palette_number, sizeof(short int), 1, write_file);
	fwrite(&details->bytes117_125, sizeof(char), 9, write_file);
	fwrite(&details->attack, sizeof(char), 1, write_file);
	fwrite(&details->attack_id, sizeof(char), 1, write_file);
	fwrite(&details->bytes128_143, sizeof(char), 16, write_file);
}
