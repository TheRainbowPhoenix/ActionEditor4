# -*- coding: utf-8 -*-

################################################################################
## Form generated from reading UI file 'MainWindowTAuGPH.ui'
##
## Created by: Qt User Interface Compiler version 6.9.0
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################

from PySide6.QtCore import (QCoreApplication, QDate, QDateTime, QLocale,
    QMetaObject, QObject, QPoint, QRect,
    QSize, QTime, QUrl, Qt)
from PySide6.QtGui import (QAction, QBrush, QColor, QConicalGradient,
    QCursor, QFont, QFontDatabase, QGradient,
    QIcon, QImage, QKeySequence, QLinearGradient,
    QPainter, QPalette, QPixmap, QRadialGradient,
    QTransform)
from PySide6.QtWidgets import (QApplication, QMainWindow, QMenu, QMenuBar,
    QSizePolicy, QStatusBar, QToolBar, QWidget)
from acted4.resources import resources_rc

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        if not MainWindow.objectName():
            MainWindow.setObjectName(u"MainWindow")
        MainWindow.resize(1013, 606)
        MainWindow.setDockNestingEnabled(True)
        self.actionNew_Stage = QAction(MainWindow)
        self.actionNew_Stage.setObjectName(u"actionNew_Stage")
        icon = QIcon(QIcon.fromTheme(QIcon.ThemeIcon.DocumentPageSetup))
        self.actionNew_Stage.setIcon(icon)
        self.actionOpen_Stage = QAction(MainWindow)
        self.actionOpen_Stage.setObjectName(u"actionOpen_Stage")
        icon1 = QIcon(QIcon.fromTheme(QIcon.ThemeIcon.DocumentOpen))
        self.actionOpen_Stage.setIcon(icon1)
        self.actionClose_Stage = QAction(MainWindow)
        self.actionClose_Stage.setObjectName(u"actionClose_Stage")
        self.actionSave_Stage = QAction(MainWindow)
        self.actionSave_Stage.setObjectName(u"actionSave_Stage")
        icon2 = QIcon(QIcon.fromTheme(QIcon.ThemeIcon.DocumentSave))
        self.actionSave_Stage.setIcon(icon2)
        self.actionSave_Stage_As = QAction(MainWindow)
        self.actionSave_Stage_As.setObjectName(u"actionSave_Stage_As")
        self.actionSave_Common_Palette = QAction(MainWindow)
        self.actionSave_Common_Palette.setObjectName(u"actionSave_Common_Palette")
        self.actionUndo = QAction(MainWindow)
        self.actionUndo.setObjectName(u"actionUndo")
        icon3 = QIcon(QIcon.fromTheme(QIcon.ThemeIcon.EditUndo))
        self.actionUndo.setIcon(icon3)
        self.actionRedo = QAction(MainWindow)
        self.actionRedo.setObjectName(u"actionRedo")
        icon4 = QIcon(QIcon.fromTheme(QIcon.ThemeIcon.EditRedo))
        self.actionRedo.setIcon(icon4)
        self.actionPalette_Block = QAction(MainWindow)
        self.actionPalette_Block.setObjectName(u"actionPalette_Block")
        self.actionPalette_Block.setCheckable(True)
        icon5 = QIcon()
        icon5.addFile(u":/img/icons/block.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionPalette_Block.setIcon(icon5)
        self.actionPalette_Character = QAction(MainWindow)
        self.actionPalette_Character.setObjectName(u"actionPalette_Character")
        self.actionPalette_Character.setCheckable(True)
        icon6 = QIcon()
        icon6.addFile(u":/img/icons/character.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionPalette_Character.setIcon(icon6)
        self.actionPalette_Item = QAction(MainWindow)
        self.actionPalette_Item.setObjectName(u"actionPalette_Item")
        self.actionPalette_Item.setCheckable(True)
        icon7 = QIcon()
        icon7.addFile(u":/img/icons/item.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionPalette_Item.setIcon(icon7)
        self.actionClear_All = QAction(MainWindow)
        self.actionClear_All.setObjectName(u"actionClear_All")
        self.actionClear_Blocks = QAction(MainWindow)
        self.actionClear_Blocks.setObjectName(u"actionClear_Blocks")
        self.actionClear_Characters = QAction(MainWindow)
        self.actionClear_Characters.setObjectName(u"actionClear_Characters")
        self.actionClear_Items = QAction(MainWindow)
        self.actionClear_Items.setObjectName(u"actionClear_Items")
        self.actionCommon_Palette = QAction(MainWindow)
        self.actionCommon_Palette.setObjectName(u"actionCommon_Palette")
        self.actionStage_Palette = QAction(MainWindow)
        self.actionStage_Palette.setObjectName(u"actionStage_Palette")
        self.actionGroup_Info = QAction(MainWindow)
        self.actionGroup_Info.setObjectName(u"actionGroup_Info")
        self.actionLock_Docks = QAction(MainWindow)
        self.actionLock_Docks.setObjectName(u"actionLock_Docks")
        self.actionLock_Docks.setCheckable(True)
        self.actionStage_Settings = QAction(MainWindow)
        self.actionStage_Settings.setObjectName(u"actionStage_Settings")
        self.actionLoad_Stage_Palette = QAction(MainWindow)
        self.actionLoad_Stage_Palette.setObjectName(u"actionLoad_Stage_Palette")
        self.actionSave_Stage_Palette = QAction(MainWindow)
        self.actionSave_Stage_Palette.setObjectName(u"actionSave_Stage_Palette")
        self.actionStage_Options = QAction(MainWindow)
        self.actionStage_Options.setObjectName(u"actionStage_Options")
        self.actionDatabase = QAction(MainWindow)
        self.actionDatabase.setObjectName(u"actionDatabase")
        self.actionWorld_Map = QAction(MainWindow)
        self.actionWorld_Map.setObjectName(u"actionWorld_Map")
        self.actionSystem = QAction(MainWindow)
        self.actionSystem.setObjectName(u"actionSystem")
        self.actionProject_Options = QAction(MainWindow)
        self.actionProject_Options.setObjectName(u"actionProject_Options")
        self.actionTest_Play = QAction(MainWindow)
        self.actionTest_Play.setObjectName(u"actionTest_Play")
        icon8 = QIcon()
        icon8.addFile(u":/img/icons/test.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionTest_Play.setIcon(icon8)
        self.actionTest_Play_Game = QAction(MainWindow)
        self.actionTest_Play_Game.setObjectName(u"actionTest_Play_Game")
        icon9 = QIcon()
        icon9.addFile(u":/img/icons/game.svg", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.actionTest_Play_Game.setIcon(icon9)
        self.actionBitmap_Tool = QAction(MainWindow)
        self.actionBitmap_Tool.setObjectName(u"actionBitmap_Tool")
        self.actionOpen_Project = QAction(MainWindow)
        self.actionOpen_Project.setObjectName(u"actionOpen_Project")
        self.actionSave_Project_As = QAction(MainWindow)
        self.actionSave_Project_As.setObjectName(u"actionSave_Project_As")
        self.actionClose_Project = QAction(MainWindow)
        self.actionClose_Project.setObjectName(u"actionClose_Project")
        self.centralwidget = QWidget(MainWindow)
        self.centralwidget.setObjectName(u"centralwidget")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QMenuBar(MainWindow)
        self.menubar.setObjectName(u"menubar")
        self.menubar.setGeometry(QRect(0, 0, 1013, 22))
        self.menuFile = QMenu(self.menubar)
        self.menuFile.setObjectName(u"menuFile")
        self.menuRecentStages = QMenu(self.menuFile)
        self.menuRecentStages.setObjectName(u"menuRecentStages")
        self.menuEdit = QMenu(self.menubar)
        self.menuEdit.setObjectName(u"menuEdit")
        self.menuChange_Palette = QMenu(self.menuEdit)
        self.menuChange_Palette.setObjectName(u"menuChange_Palette")
        self.menuClear_Placement = QMenu(self.menuEdit)
        self.menuClear_Placement.setObjectName(u"menuClear_Placement")
        self.menuView = QMenu(self.menubar)
        self.menuView.setObjectName(u"menuView")
        self.menuStage = QMenu(self.menubar)
        self.menuStage.setObjectName(u"menuStage")
        self.menuProject = QMenu(self.menubar)
        self.menuProject.setObjectName(u"menuProject")
        self.menuTest = QMenu(self.menubar)
        self.menuTest.setObjectName(u"menuTest")
        self.menuOther = QMenu(self.menubar)
        self.menuOther.setObjectName(u"menuOther")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QStatusBar(MainWindow)
        self.statusbar.setObjectName(u"statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = QToolBar(MainWindow)
        self.toolBar.setObjectName(u"toolBar")
        self.toolBar.setAcceptDrops(False)
        self.toolBar.setIconSize(QSize(24, 24))
        self.toolBar.setToolButtonStyle(Qt.ToolButtonStyle.ToolButtonIconOnly)
        self.toolBar.setFloatable(False)
        MainWindow.addToolBar(Qt.ToolBarArea.TopToolBarArea, self.toolBar)

        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuView.menuAction())
        self.menubar.addAction(self.menuStage.menuAction())
        self.menubar.addAction(self.menuProject.menuAction())
        self.menubar.addAction(self.menuTest.menuAction())
        self.menubar.addAction(self.menuOther.menuAction())
        self.menuFile.addAction(self.actionNew_Stage)
        self.menuFile.addAction(self.actionOpen_Stage)
        self.menuFile.addAction(self.menuRecentStages.menuAction())
        self.menuFile.addAction(self.actionClose_Stage)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSave_Stage)
        self.menuFile.addAction(self.actionSave_Stage_As)
        self.menuFile.addAction(self.actionSave_Common_Palette)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionOpen_Project)
        self.menuFile.addAction(self.actionSave_Project_As)
        self.menuFile.addAction(self.actionClose_Project)
        self.menuEdit.addAction(self.actionUndo)
        self.menuEdit.addAction(self.actionRedo)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.menuChange_Palette.menuAction())
        self.menuEdit.addAction(self.menuClear_Placement.menuAction())
        self.menuChange_Palette.addAction(self.actionPalette_Block)
        self.menuChange_Palette.addAction(self.actionPalette_Character)
        self.menuChange_Palette.addAction(self.actionPalette_Item)
        self.menuClear_Placement.addAction(self.actionClear_All)
        self.menuClear_Placement.addAction(self.actionClear_Blocks)
        self.menuClear_Placement.addAction(self.actionClear_Characters)
        self.menuClear_Placement.addAction(self.actionClear_Items)
        self.menuView.addAction(self.actionCommon_Palette)
        self.menuView.addAction(self.actionStage_Palette)
        self.menuView.addAction(self.actionGroup_Info)
        self.menuView.addSeparator()
        self.menuView.addAction(self.actionLock_Docks)
        self.menuStage.addAction(self.actionStage_Settings)
        self.menuStage.addSeparator()
        self.menuStage.addAction(self.actionLoad_Stage_Palette)
        self.menuStage.addAction(self.actionSave_Stage_Palette)
        self.menuStage.addSeparator()
        self.menuStage.addAction(self.actionStage_Options)
        self.menuProject.addAction(self.actionDatabase)
        self.menuProject.addAction(self.actionWorld_Map)
        self.menuProject.addAction(self.actionSystem)
        self.menuProject.addSeparator()
        self.menuProject.addAction(self.actionProject_Options)
        self.menuTest.addAction(self.actionTest_Play)
        self.menuTest.addAction(self.actionTest_Play_Game)
        self.menuOther.addAction(self.actionBitmap_Tool)
        self.toolBar.addAction(self.actionNew_Stage)
        self.toolBar.addAction(self.actionOpen_Stage)
        self.toolBar.addAction(self.actionSave_Stage)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionUndo)
        self.toolBar.addAction(self.actionRedo)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionPalette_Block)
        self.toolBar.addAction(self.actionPalette_Character)
        self.toolBar.addAction(self.actionPalette_Item)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionTest_Play)
        self.toolBar.addAction(self.actionTest_Play_Game)

        self.retranslateUi(MainWindow)

        QMetaObject.connectSlotsByName(MainWindow)
    # setupUi

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(QCoreApplication.translate("MainWindow", u"Action Editor", None))
        self.actionNew_Stage.setText(QCoreApplication.translate("MainWindow", u"Create New Stage(&N)", None))
#if QT_CONFIG(shortcut)
        self.actionNew_Stage.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+N", None))
#endif // QT_CONFIG(shortcut)
        self.actionOpen_Stage.setText(QCoreApplication.translate("MainWindow", u"Open Stage(&O)", None))
#if QT_CONFIG(shortcut)
        self.actionOpen_Stage.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+O", None))
#endif // QT_CONFIG(shortcut)
        self.actionClose_Stage.setText(QCoreApplication.translate("MainWindow", u"Close Stage(&C)", None))
        self.actionSave_Stage.setText(QCoreApplication.translate("MainWindow", u"Save Common Palette && Stage (Overwrite)(&S)", None))
#if QT_CONFIG(shortcut)
        self.actionSave_Stage.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+S", None))
#endif // QT_CONFIG(shortcut)
        self.actionSave_Stage_As.setText(QCoreApplication.translate("MainWindow", u"Save Common Palette && Stage (New Save)(&A)", None))
        self.actionSave_Common_Palette.setText(QCoreApplication.translate("MainWindow", u"Save Common Palette (Overwrite)(&B)", None))
        self.actionUndo.setText(QCoreApplication.translate("MainWindow", u"Undo(&U)", None))
#if QT_CONFIG(shortcut)
        self.actionUndo.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+Z", None))
#endif // QT_CONFIG(shortcut)
        self.actionRedo.setText(QCoreApplication.translate("MainWindow", u"Redo(&R)", None))
#if QT_CONFIG(shortcut)
        self.actionRedo.setShortcut(QCoreApplication.translate("MainWindow", u"Ctrl+Y", None))
#endif // QT_CONFIG(shortcut)
        self.actionPalette_Block.setText(QCoreApplication.translate("MainWindow", u"Block(&B)", None))
        self.actionPalette_Character.setText(QCoreApplication.translate("MainWindow", u"Character(&C)", None))
        self.actionPalette_Item.setText(QCoreApplication.translate("MainWindow", u"Item(&I)", None))
        self.actionClear_All.setText(QCoreApplication.translate("MainWindow", u"Clear All Placement Data(&A)", None))
        self.actionClear_Blocks.setText(QCoreApplication.translate("MainWindow", u"Clear All Blocks(&B)", None))
        self.actionClear_Characters.setText(QCoreApplication.translate("MainWindow", u"Clear All Characters(&C)", None))
        self.actionClear_Items.setText(QCoreApplication.translate("MainWindow", u"Clear All Items(&I)", None))
        self.actionCommon_Palette.setText(QCoreApplication.translate("MainWindow", u"Common Palette(&C)", None))
        self.actionStage_Palette.setText(QCoreApplication.translate("MainWindow", u"Stage Palette(&S)", None))
        self.actionGroup_Info.setText(QCoreApplication.translate("MainWindow", u"Group Info(&G)", None))
        self.actionLock_Docks.setText(QCoreApplication.translate("MainWindow", u"Lock Docks", None))
        self.actionStage_Settings.setText(QCoreApplication.translate("MainWindow", u"Stage Settings(&E)", None))
        self.actionLoad_Stage_Palette.setText(QCoreApplication.translate("MainWindow", u"Load Stage Palette(&L)", None))
        self.actionSave_Stage_Palette.setText(QCoreApplication.translate("MainWindow", u"Save Stage Palette(&A)", None))
        self.actionStage_Options.setText(QCoreApplication.translate("MainWindow", u"Stage Options(&O)", None))
        self.actionDatabase.setText(QCoreApplication.translate("MainWindow", u"Database(&D)", None))
        self.actionWorld_Map.setText(QCoreApplication.translate("MainWindow", u"World Map(&W)", None))
        self.actionSystem.setText(QCoreApplication.translate("MainWindow", u"System(&S)", None))
        self.actionProject_Options.setText(QCoreApplication.translate("MainWindow", u"Project Options(&O)", None))
        self.actionTest_Play.setText(QCoreApplication.translate("MainWindow", u"Test Play(&T)", None))
#if QT_CONFIG(shortcut)
        self.actionTest_Play.setShortcut(QCoreApplication.translate("MainWindow", u"F5", None))
#endif // QT_CONFIG(shortcut)
        self.actionTest_Play_Game.setText(QCoreApplication.translate("MainWindow", u"Test Play (Whole Game)(&G)", None))
#if QT_CONFIG(shortcut)
        self.actionTest_Play_Game.setShortcut(QCoreApplication.translate("MainWindow", u"F7", None))
#endif // QT_CONFIG(shortcut)
        self.actionBitmap_Tool.setText(QCoreApplication.translate("MainWindow", u"Bitmap Conversion Tool(&B)", None))
        self.actionOpen_Project.setText(QCoreApplication.translate("MainWindow", u"Open Project...", None))
        self.actionSave_Project_As.setText(QCoreApplication.translate("MainWindow", u"Save Project As...", None))
        self.actionClose_Project.setText(QCoreApplication.translate("MainWindow", u"Close Project", None))
        self.menuFile.setTitle(QCoreApplication.translate("MainWindow", u"File(&F)", None))
        self.menuRecentStages.setTitle(QCoreApplication.translate("MainWindow", u"Open Recent", None))
        self.menuEdit.setTitle(QCoreApplication.translate("MainWindow", u"Edit(&E)", None))
        self.menuChange_Palette.setTitle(QCoreApplication.translate("MainWindow", u"Change Palette(&P)", None))
        self.menuClear_Placement.setTitle(QCoreApplication.translate("MainWindow", u"Clear Placement Data(&C)", None))
        self.menuView.setTitle(QCoreApplication.translate("MainWindow", u"View(&V)", None))
        self.menuStage.setTitle(QCoreApplication.translate("MainWindow", u"Stage(&S)", None))
        self.menuProject.setTitle(QCoreApplication.translate("MainWindow", u"Project(&P)", None))
        self.menuTest.setTitle(QCoreApplication.translate("MainWindow", u"Test Play(&T)", None))
        self.menuOther.setTitle(QCoreApplication.translate("MainWindow", u"Other(&O)", None))
        self.toolBar.setWindowTitle(QCoreApplication.translate("MainWindow", u"toolBar", None))
    # retranslateUi

